// Script para criar uma conta de teste no Supabase
import { createClient } from '@supabase/supabase-js';

// Configura√ß√£o do Supabase
const supabaseUrl = 'https://rtxrgqlhdbsztsbnycln.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJ0eHJncWxoZGJzenRzYm55Y2xuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA1NjU1MTAsImV4cCI6MjA2NjE0MTUxMH0.IcF22qbU7vMlwQ04RfY3Tc4z9vmQYs-2sYxKxQoTnpw';

// Criar cliente Supabase
const supabase = createClient(supabaseUrl, supabaseKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

// Fun√ß√£o para gerar um email aleat√≥rio
function generateRandomEmail() {
  const characters = 'abcdefghijklmnopqrstuvwxyz';
  const length = 10;
  let result = '';
  for (let i = 0; i < length; i++) {
    result += characters.charAt(Math.floor(Math.random() * characters.length));
  }
  return `${result}@example.com`;
}

// Criar conta de teste
async function createTestAccount() {
  const testEmail = generateRandomEmail();
  const testPassword = 'senha123'; // Senha padr√£o para teste
  const testName = 'Usu√°rio Teste';
  const testPhone = '11999999999';

  console.log('\nüîÑ Criando conta de teste...');
  console.log(`üìß Email: ${testEmail}`);
  console.log(`üîë Senha: ${testPassword}`);
  console.log(`üë§ Nome: ${testName}`);
  console.log(`üì± Telefone: ${testPhone}`);

  try {
    // 1. Criar usu√°rio na autentica√ß√£o
    console.log('\n1. Criando usu√°rio na autentica√ß√£o...');
    const { data: authData, error: signUpError } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
      options: {
        data: {
          name: testName,
          phone: testPhone,
        },
        emailRedirectTo: 'http://localhost:3000/login',
      },
    });

    if (signUpError) {
      console.error('‚ùå Erro ao criar usu√°rio:', signUpError.message);
      return;
    }

    console.log('‚úÖ Usu√°rio criado com sucesso!');
    console.log('ID do usu√°rio:', authData.user.id);

    // 2. Criar perfil na tabela profiles
    console.log('\n2. Criando perfil do usu√°rio...');
    const { data: profileData, error: profileError } = await supabase
      .from('profiles')
      .insert({
        id: authData.user.id,
        name: testName,
        email: testEmail,
        phone: testPhone,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
      })
      .select()
      .single();

    if (profileError) {
      console.error('‚ùå Erro ao criar perfil:', profileError.message);
      // Continuar mesmo com erro, pois o usu√°rio j√° foi criado
    } else {
      console.log('‚úÖ Perfil criado com sucesso!');
    }

    // 3. Fazer login para confirmar que est√° tudo certo
    console.log('\n3. Testando login...');
    const { data: loginData, error: loginError } = await supabase.auth.signInWithPassword({
      email: testEmail,
      password: testPassword,
    });

    if (loginError) {
      console.error('‚ùå Erro ao fazer login:', loginError.message);
      return;
    }

    console.log('‚úÖ Login realizado com sucesso!');
    
    console.log('\nüéâ Conta de teste criada com sucesso!');
    console.log('\nüìã Informa√ß√µes da conta:');
    console.log('-----------------------');
    console.log(`üîó URL do painel: http://localhost:3000/login`);
    console.log(`üìß Email: ${testEmail}`);
    console.log(`üîë Senha: ${testPassword}`);
    console.log('\n‚ö†Ô∏è  Lembre-se de que este √© um usu√°rio de teste. Use-o apenas para fins de desenvolvimento.');

  } catch (error) {
    console.error('‚ùå Erro inesperado:', error);
  }
}

// Executar a cria√ß√£o da conta
createTestAccount();
